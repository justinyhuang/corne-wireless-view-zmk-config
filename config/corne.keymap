#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick-tap-ms = <200>;
    flavor = "hold-preferred";
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <350>;
};

/ {
    macros {
        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
        };

        square_bracket: square_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "SQUARE_BRACKET";
        };

        angle_bracket: angle_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT_ARROW>;
            label = "ANGLE_BRACKET";
        };

        brace_bracket: brace_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "BRACE_BRACKET";
        };
    };

    behaviors {
        left_mt: left_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "balanced";
            hold-trigger-key-positions = <18 19 20 21 22>;
        };

        right_mt: right_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 14 15 16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&lt 4 ESC      &kp Q  &kp W                    &kp F                &kp P             &kp G           &kp J      &kp L              &kp U                  &kp Y                  &kp SEMI  &kp BSPC
&mt LCTRL TAB  &kp A  &left_mt LEFT_COMMAND R  &left_mt LEFT_ALT S  &left_mt LCTRL T  &kp D           &kp H      &right_mt RCTRL N  &right_mt RIGHT_ALT E  &right_mt RIGHT_GUI I  &kp O     &kp RET
&kp LSHFT      &kp Z  &kp X                    &kp C                &kp V             &kp B           &kp K      &kp M              &kp COMMA              &kp DOT                &kp FSLH  &kp SQT
                                               &lt 3 MINUS          &lt 2 GRAVE       &lt 1 ESCAPE    &kp SPACE  &kp RIGHT_SHIFT    &mo 5
            >;
        };

        cursors {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans          &kp UP_ARROW  &trans     &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp END   &kp PAGE_DOWN  &trans          &trans        &trans     &trans
                        &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS          &kp N7        &kp N8     &kp N9  &kp X          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACKET   &kp N4        &kp N5     &kp N6  &kp PERIOD     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_BRACKET  &kp N1        &kp N2     &kp N3  &kp BACKSLASH  &trans
                        &trans  &trans  &trans    &kp EQUAL          &kp NUMBER_0  &kp GRAVE
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDER        &kp AMPS               &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACE   &kp DOLLAR             &kp PERCENT   &kp CARET             &trans                 &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp RIGHT_BRACE  &kp EXCL               &kp AT        &kp HASH              &kp PIPE               &trans
                        &trans  &trans  &trans    &kp PLUS         &kp RIGHT_PARENTHESIS  &kp TILDE
            >;
        };

        MultiMedia {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_NXT  &trans  &trans  &trans    &trans  &trans             &trans           &trans  &trans  &none
&trans  &trans          &trans      &trans  &trans  &trans    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
&trans  &trans          &trans      &trans  &trans  &trans    &trans  &kp K_MUTE         &trans           &trans  &trans  &trans
                                    &trans  &trans  &trans    &trans  &kp LS(LG(A))      &trans
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &none
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        sign_macros {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans          &trans           &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bracket  &angle_bracket  &square_bracket  &brace_bracket  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans          &trans           &trans          &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
